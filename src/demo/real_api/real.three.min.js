class RealAPI{constructor(e,t,s,r,a){this.appKey=t,this.product=r,this.userName=e,this.appSecret=s,this.jobInfo={jobs:[],scene:null,jobUri:null},this.waiting=!1,this.connecting=!1,this.isLoggedIn=!1,this.__socket=null,this.__pars=a}isPending(){return this.jobInfo.scene||this.jobInfo.jobUri}clear(){this.jobInfo.scene=null,this.jobInfo.jobUri=null}clearAll(){this.waiting=!1,this.jobInfo.scene=null,this.jobInfo.jobUri=null}updateJobs(e){if(e&&e.length){var s=this.jobInfo.jobs,r=s.length,a=[];for(const i of e){let t=!0;for(let e=0;e<r;e++){var n=s[e].jobID;if(i.jobID===n){s[e]=i,t=!1;break}}t&&a.push(i)}for(const t of a)s.push(t);this.jobInfo.jobs=s}}async render(e){this.clear(),await this.askService(Status.Upload,e)}downloadParams(e){return{data:{jobID:e,prodCred:{appKey:this.appKey,userName:this.userName,appSecret:this.appSecret,prodKey:this.product.prodKey,insID:this.product.insID}}}}async login(e,t){this.__socket||(this.__socket=new RealSocket(e,t,this)),await this.__socket.connect()}async askService(e,t=null,s=null,r=!1){await this.__socket.ask(e,t,s,r)}async requestService(e,t){return this.__socket.requestService(e,t)}}class JobResult{constructor(e){this.jobID=e,this.status="",this.result=""}}class RealProduct{constructor(e,t,s){this.insID=s,this.prodKey=t,this.prodName=e}}import{BufferAttribute,ClampToEdgeWrapping,DoubleSide,InterpolateDiscrete,InterpolateLinear,LinearEncoding,LinearFilter,LinearMipmapLinearFilter,LinearMipmapNearestFilter,MathUtils,Matrix4,MirroredRepeatWrapping,NearestFilter,NearestMipmapLinearFilter,NearestMipmapNearestFilter,PropertyBinding,RGBAFormat,RepeatWrapping,Scene,Source,sRGBEncoding,Vector3}from"./three.module.js";class ThreeSceneExporter{constructor(){this.pluginCallbacks=[],this.register(function(e){return new GLTFLightExtension(e)}),this.register(function(e){return new GLTFMaterialsUnlitExtension(e)}),this.register(function(e){return new GLTFMaterialsTransmissionExtension(e)}),this.register(function(e){return new GLTFMaterialsVolumeExtension(e)}),this.register(function(e){return new GLTFMaterialsClearcoatExtension(e)}),this.register(function(e){return new GLTFMaterialsIridescenceExtension(e)})}register(e){return-1===this.pluginCallbacks.indexOf(e)&&this.pluginCallbacks.push(e),this}unregister(e){return-1!==this.pluginCallbacks.indexOf(e)&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(e),1),this}parse(e,t,s,r){var a=new GLTFWriter,n=[];for(let e=0,t=this.pluginCallbacks.length;e<t;e++)n.push(this.pluginCallbacks[e](a));a.setPlugins(n),a.write(e,t,r).catch(s)}parseAsync(s,r){const a=this;return new Promise(function(e,t){a.parse(s,e,t,r)})}}const WEBGL_CONSTANTS={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,UNSIGNED_BYTE:5121,UNSIGNED_SHORT:5123,FLOAT:5126,UNSIGNED_INT:5125,ARRAY_BUFFER:34962,ELEMENT_ARRAY_BUFFER:34963,NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648,REPEAT:10497},THREE_TO_WEBGL={},PATH_PROPERTIES=(THREE_TO_WEBGL[NearestFilter]=WEBGL_CONSTANTS.NEAREST,THREE_TO_WEBGL[NearestMipmapNearestFilter]=WEBGL_CONSTANTS.NEAREST_MIPMAP_NEAREST,THREE_TO_WEBGL[NearestMipmapLinearFilter]=WEBGL_CONSTANTS.NEAREST_MIPMAP_LINEAR,THREE_TO_WEBGL[LinearFilter]=WEBGL_CONSTANTS.LINEAR,THREE_TO_WEBGL[LinearMipmapNearestFilter]=WEBGL_CONSTANTS.LINEAR_MIPMAP_NEAREST,THREE_TO_WEBGL[LinearMipmapLinearFilter]=WEBGL_CONSTANTS.LINEAR_MIPMAP_LINEAR,THREE_TO_WEBGL[ClampToEdgeWrapping]=WEBGL_CONSTANTS.CLAMP_TO_EDGE,THREE_TO_WEBGL[RepeatWrapping]=WEBGL_CONSTANTS.REPEAT,THREE_TO_WEBGL[MirroredRepeatWrapping]=WEBGL_CONSTANTS.MIRRORED_REPEAT,{scale:"scale",position:"translation",quaternion:"rotation",morphTargetInfluences:"weights"}),GLB_HEADER_BYTES=12,GLB_HEADER_MAGIC=1179937895,GLB_VERSION=2,GLB_CHUNK_PREFIX_BYTES=8,GLB_CHUNK_TYPE_JSON=1313821514,GLB_CHUNK_TYPE_BIN=5130562;function equalArray(e,s){return e.length===s.length&&e.every(function(e,t){return e===s[t]})}function stringToArrayBuffer(e){return(new TextEncoder).encode(e).buffer}function isIdentityMatrix(e){return equalArray(e.elements,[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}function getMinMax(r,e,t){var a={min:new Array(r.itemSize).fill(Number.POSITIVE_INFINITY),max:new Array(r.itemSize).fill(Number.NEGATIVE_INFINITY)};for(let s=e;s<e+t;s++)for(let t=0;t<r.itemSize;t++){let e;4<r.itemSize?e=r.array[s*r.itemSize+t]:(0===t?e=r.getX(s):1===t?e=r.getY(s):2===t?e=r.getZ(s):3===t&&(e=r.getW(s)),!0===r.normalized&&(e=MathUtils.normalize(e,r.array))),a.min[t]=Math.min(a.min[t],e),a.max[t]=Math.max(a.max[t],e)}return a}function getPaddedBufferSize(e){return 4*Math.ceil(e/4)}function getPaddedArrayBuffer(t,s=0){var r=getPaddedBufferSize(t.byteLength);if(r===t.byteLength)return t;var a=new Uint8Array(r);if(a.set(new Uint8Array(t)),0!==s)for(let e=t.byteLength;e<r;e++)a[e]=s;return a.buffer}function getCanvas(){return"undefined"==typeof document&&"undefined"!=typeof OffscreenCanvas?new OffscreenCanvas(1,1):document.createElement("canvas")}function getToBlobPromise(t,s){if(void 0!==t.toBlob)return new Promise(e=>t.toBlob(e,s));let e;return"image/jpeg"===s?e=.92:"image/webp"===s&&(e=.8),t.convertToBlob({type:s,quality:e})}class GLTFWriter{constructor(){this.plugins=[],this.options={},this.pending=[],this.buffers=[],this.byteOffset=0,this.buffers=[],this.nodeMap=new Map,this.skins=[],this.extensionsUsed={},this.uids=new Map,this.uid=0,this.json={asset:{version:"2.0",generator:"THREE.GLTFExporter"}},this.cache={meshes:new Map,attributes:new Map,attributesNormalized:new Map,materials:new Map,textures:new Map,images:new Map}}setPlugins(e){this.plugins=e}async write(e,l,t={}){this.options=Object.assign({binary:!1,trs:!1,onlyVisible:!0,maxTextureSize:1/0,animations:[],includeCustomExtensions:!1},t),0<this.options.animations.length&&(this.options.trs=!0),this.processInput(e),await Promise.all(this.pending);e=this.buffers;const c=this.json;t=this.options;var s=this.extensionsUsed,e=new Blob(e,{type:"application/octet-stream"}),s=Object.keys(s);if(0<s.length&&(c.extensionsUsed=s),c.buffers&&0<c.buffers.length&&(c.buffers[0].byteLength=e.size),!0===t.binary){const h=new FileReader;h.readAsArrayBuffer(e),h.onloadend=function(){var e=getPaddedArrayBuffer(h.result),t=new DataView(new ArrayBuffer(GLB_CHUNK_PREFIX_BYTES)),s=(t.setUint32(0,e.byteLength,!0),t.setUint32(4,GLB_CHUNK_TYPE_BIN,!0),getPaddedArrayBuffer(stringToArrayBuffer(JSON.stringify(c)),32)),r=new DataView(new ArrayBuffer(GLB_CHUNK_PREFIX_BYTES)),a=(r.setUint32(0,s.byteLength,!0),r.setUint32(4,GLB_CHUNK_TYPE_JSON,!0),new ArrayBuffer(GLB_HEADER_BYTES)),n=new DataView(a),i=(n.setUint32(0,GLB_HEADER_MAGIC,!0),n.setUint32(4,GLB_VERSION,!0),GLB_HEADER_BYTES+r.byteLength+s.byteLength+t.byteLength+e.byteLength),n=(n.setUint32(8,i,!0),new Blob([a,r,s,t,e],{type:"application/octet-stream"}));const o=new FileReader;o.readAsArrayBuffer(n),o.onloadend=function(){l(o.result)}}}else if(c.buffers&&0<c.buffers.length){const r=new FileReader;r.readAsDataURL(e),r.onloadend=function(){var e=r.result;c.buffers[0].uri=e,l(c)}}else l(c)}serializeUserData(t,e){if(0!==Object.keys(t.userData).length){var s=this.options,r=this.extensionsUsed;try{var a=JSON.parse(JSON.stringify(t.userData));if(s.includeCustomExtensions&&a.gltfExtensions){void 0===e.extensions&&(e.extensions={});for(const n in a.gltfExtensions)e.extensions[n]=a.gltfExtensions[n],r[n]=!0;delete a.gltfExtensions}0<Object.keys(a).length&&(e.extras=a)}catch(e){console.warn("THREE.GLTFExporter: userData of '"+t.name+"' won't be serialized because of JSON.stringify error - "+e.message)}}}getUID(e,t=!1){if(!1===this.uids.has(e)){const s=new Map;s.set(!0,this.uid++),s.set(!1,this.uid++),this.uids.set(e,s)}const s=this.uids.get(e);return s.get(t)}isNormalizedNormalAttribute(s){if(this.cache.attributesNormalized.has(s))return!1;var r=new Vector3;for(let e=0,t=s.count;e<t;e++)if(5e-4<Math.abs(r.fromBufferAttribute(s,e).length()-1))return!1;return!0}createNormalizedNormalAttribute(e){var t=this.cache;if(t.attributesNormalized.has(e))return t.attributesNormalized.get(e);var s=e.clone(),r=new Vector3;for(let e=0,t=s.count;e<t;e++)r.fromBufferAttribute(s,e),0===r.x&&0===r.y&&0===r.z?r.setX(1):r.normalize(),s.setXYZ(e,r.x,r.y,r.z);return t.attributesNormalized.set(e,s),s}applyTextureTransform(e,t){let s=!1;var r={};0===t.offset.x&&0===t.offset.y||(r.offset=t.offset.toArray(),s=!0),0!==t.rotation&&(r.rotation=t.rotation,s=!0),1===t.repeat.x&&1===t.repeat.y||(r.scale=t.repeat.toArray(),s=!0),s&&(e.extensions=e.extensions||{},e.extensions.KHR_texture_transform=r,this.extensionsUsed.KHR_texture_transform=!0)}buildMetalRoughTexture(e,t){if(e===t)return e;function s(e){return e.encoding===sRGBEncoding?function(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}:function(e){return e}}console.warn("THREE.GLTFExporter: Merged metalnessMap and roughnessMap textures.");var r=e.image,a=t.image,n=Math.max(r.width||0,a.width||0),i=Math.max(r.height||0,a.height||0),o=getCanvas(),l=(o.width=n,o.height=i,o.getContext("2d")),c=(l.fillStyle="#00ffff",l.fillRect(0,0,n,i),l.getImageData(0,0,n,i));if(r){l.drawImage(r,0,0,n,i);var h=s(e),u=l.getImageData(0,0,n,i).data;for(let e=2;e<u.length;e+=4)c.data[e]=256*h(u[e]/256)}if(a){l.drawImage(a,0,0,n,i);var p=s(t),m=l.getImageData(0,0,n,i).data;for(let e=1;e<m.length;e+=4)c.data[e]=256*p(m[e]/256)}l.putImageData(c,0,0);r=(e||t).clone();return r.source=new Source(o),r.encoding=LinearEncoding,r}processBuffer(e){var t=this.json,s=this.buffers;return t.buffers||(t.buffers=[{byteLength:0}]),s.push(e),0}processBufferView(r,a,e,t,s){var n=this.json;n.bufferViews||(n.bufferViews=[]);let i;i=a===WEBGL_CONSTANTS.UNSIGNED_BYTE?1:a===WEBGL_CONSTANTS.UNSIGNED_SHORT?2:4;var o=getPaddedBufferSize(t*r.itemSize*i),l=new DataView(new ArrayBuffer(o));let c=0;for(let s=e;s<e+t;s++)for(let t=0;t<r.itemSize;t++){let e;4<r.itemSize?e=r.array[s*r.itemSize+t]:(0===t?e=r.getX(s):1===t?e=r.getY(s):2===t?e=r.getZ(s):3===t&&(e=r.getW(s)),!0===r.normalized&&(e=MathUtils.normalize(e,r.array))),a===WEBGL_CONSTANTS.FLOAT?l.setFloat32(c,e,!0):a===WEBGL_CONSTANTS.UNSIGNED_INT?l.setUint32(c,e,!0):a===WEBGL_CONSTANTS.UNSIGNED_SHORT?l.setUint16(c,e,!0):a===WEBGL_CONSTANTS.UNSIGNED_BYTE&&l.setUint8(c,e),c+=i}var h={buffer:this.processBuffer(l.buffer),byteOffset:this.byteOffset,byteLength:o},s=(void 0!==s&&(h.target=s),s===WEBGL_CONSTANTS.ARRAY_BUFFER&&(h.byteStride=r.itemSize*i),this.byteOffset+=o,n.bufferViews.push(h),{id:n.bufferViews.length-1,byteLength:0});return s}processBufferViewImage(e){const a=this,n=a.json;return n.bufferViews||(n.bufferViews=[]),new Promise(function(s){const r=new FileReader;r.readAsArrayBuffer(e),r.onloadend=function(){var e=getPaddedArrayBuffer(r.result),t={buffer:a.processBuffer(e),byteOffset:a.byteOffset,byteLength:e.byteLength};a.byteOffset+=e.byteLength,s(n.bufferViews.push(t)-1)}})}processAccessor(e,t,s,r){var a=this.json;let n;if(e.array.constructor===Float32Array)n=WEBGL_CONSTANTS.FLOAT;else if(e.array.constructor===Uint32Array)n=WEBGL_CONSTANTS.UNSIGNED_INT;else if(e.array.constructor===Uint16Array)n=WEBGL_CONSTANTS.UNSIGNED_SHORT;else{if(e.array.constructor!==Uint8Array)throw new Error("THREE.GLTFExporter: Unsupported bufferAttribute component type.");n=WEBGL_CONSTANTS.UNSIGNED_BYTE}if(0===(r=void 0===r?e.count:r))return null;var i=getMinMax(e,s=void 0===s?0:s,r);let o;void 0!==t&&(o=e===t.index?WEBGL_CONSTANTS.ELEMENT_ARRAY_BUFFER:WEBGL_CONSTANTS.ARRAY_BUFFER);t=this.processBufferView(e,n,s,r,o),s={bufferView:t.id,byteOffset:t.byteOffset,componentType:n,count:r,max:i.max,min:i.min,type:{1:"SCALAR",2:"VEC2",3:"VEC3",4:"VEC4",16:"MAT4"}[e.itemSize]};return!0===e.normalized&&(s.normalized=!0),a.accessors||(a.accessors=[]),a.accessors.push(s)-1}processImage(t,e,s,r="image/png"){if(null===t)throw new Error("THREE.GLTFExporter: No valid image data found. Unable to process texture.");{const p=this;var a=p.cache,n=p.json,i=p.options,o=p.pending,a=(a.images.has(t)||a.images.set(t,{}),a.images.get(t)),l=r+":flipY/"+s.toString();if(void 0!==a[l])return a[l];n.images||(n.images=[]);const m={mimeType:r};var c=getCanvas(),h=(c.width=Math.min(t.width,i.maxTextureSize),c.height=Math.min(t.height,i.maxTextureSize),c.getContext("2d"));if(!0===s&&(h.translate(0,c.height),h.scale(1,-1)),void 0!==t.data){e!==RGBAFormat&&console.error("GLTFExporter: Only RGBAFormat is supported."),(t.width>i.maxTextureSize||t.height>i.maxTextureSize)&&console.warn("GLTFExporter: Image size is bigger than maxTextureSize",t);var u=new Uint8ClampedArray(t.height*t.width*4);for(let e=0;e<u.length;e+=4)u[e+0]=t.data[e+0],u[e+1]=t.data[e+1],u[e+2]=t.data[e+2],u[e+3]=t.data[e+3];h.putImageData(new ImageData(u,t.width,t.height),0,0)}else h.drawImage(t,0,0,c.width,c.height);!0===i.binary?o.push(getToBlobPromise(c,r).then(e=>p.processBufferViewImage(e)).then(e=>{m.bufferView=e})):void 0!==c.toDataURL?m.uri=c.toDataURL(r):o.push(getToBlobPromise(c,r).then(e=>(new FileReader).readAsDataURL(e)).then(e=>{m.uri=e}));s=n.images.push(m)-1;return a[l]=s}}processSampler(e){var t=this.json,e=(t.samplers||(t.samplers=[]),{magFilter:THREE_TO_WEBGL[e.magFilter],minFilter:THREE_TO_WEBGL[e.minFilter],wrapS:THREE_TO_WEBGL[e.wrapS],wrapT:THREE_TO_WEBGL[e.wrapT]});return t.samplers.push(e)-1}processTexture(t){var e=this.cache,s=this.json;if(e.textures.has(t))return e.textures.get(t);s.textures||(s.textures=[]);let r=t.userData.mimeType;"image/webp"===r&&(r="image/png");const a={sampler:this.processSampler(t),source:this.processImage(t.image,t.format,t.flipY,r)};t.name&&(a.name=t.name),this._invokeAll(function(e){e.writeTexture&&e.writeTexture(t,a)});s=s.textures.push(a)-1;return e.textures.set(t,s),s}processMaterial(t){var e=this.cache,s=this.json;if(e.materials.has(t))return e.materials.get(t);if(t.isShaderMaterial)return console.warn("GLTFExporter: THREE.ShaderMaterial not supported."),null;s.materials||(s.materials=[]);const r={pbrMetallicRoughness:{}};!0!==t.isMeshStandardMaterial&&!0!==t.isMeshBasicMaterial&&console.warn("GLTFExporter: Use MeshStandardMaterial or MeshBasicMaterial for best results.");var a=t.color.toArray().concat([t.opacity]),n=(equalArray(a,[1,1,1,1])||(r.pbrMetallicRoughness.baseColorFactor=a),t.isMeshStandardMaterial?(r.pbrMetallicRoughness.metallicFactor=t.metalness,r.pbrMetallicRoughness.roughnessFactor=t.roughness):(r.pbrMetallicRoughness.metallicFactor=.5,r.pbrMetallicRoughness.roughnessFactor=.5),(t.metalnessMap||t.roughnessMap)&&(a=this.buildMetalRoughTexture(t.metalnessMap,t.roughnessMap),n={index:this.processTexture(a)},this.applyTextureTransform(n,a),r.pbrMetallicRoughness.metallicRoughnessTexture=n),t.map&&(a={index:this.processTexture(t.map)},this.applyTextureTransform(a,t.map),r.pbrMetallicRoughness.baseColorTexture=a),t.emissive&&(n=t.emissive.clone().multiplyScalar(t.emissiveIntensity),1<(a=Math.max(n.r,n.g,n.b))&&(n.multiplyScalar(1/a),console.warn("THREE.GLTFExporter: Some emissive components exceed 1; emissive has been limited")),0<a&&(r.emissiveFactor=n.toArray()),t.emissiveMap)&&(a={index:this.processTexture(t.emissiveMap)},this.applyTextureTransform(a,t.emissiveMap),r.emissiveTexture=a),t.normalMap&&(n={index:this.processTexture(t.normalMap)},t.normalScale&&1!==t.normalScale.x&&(n.scale=t.normalScale.x),this.applyTextureTransform(n,t.normalMap),r.normalTexture=n),t.aoMap&&(a={index:this.processTexture(t.aoMap),texCoord:1},1!==t.aoMapIntensity&&(a.strength=t.aoMapIntensity),this.applyTextureTransform(a,t.aoMap),r.occlusionTexture=a),t.transparent?r.alphaMode="BLEND":0<t.alphaTest&&(r.alphaMode="MASK",r.alphaCutoff=t.alphaTest),t.side===DoubleSide&&(r.doubleSided=!0),""!==t.name&&(r.name=t.name),this.serializeUserData(t,r),this._invokeAll(function(e){e.writeMaterial&&e.writeMaterial(t,r)}),s.materials.push(r)-1);return e.materials.set(t,n),n}processMesh(s){var r=this.cache,e=this.json,a=[s.geometry.uuid];if(Array.isArray(s.material))for(let e=0,t=s.material.length;e<t;e++)a.push(s.material[e].uuid);else a.push(s.material.uuid);var t=a.join(":");if(r.meshes.has(t))return r.meshes.get(t);var n=s.geometry;let i;i=s.isLineSegments?WEBGL_CONSTANTS.LINES:s.isLineLoop?WEBGL_CONSTANTS.LINE_LOOP:s.isLine?WEBGL_CONSTANTS.LINE_STRIP:s.isPoints?WEBGL_CONSTANTS.POINTS:s.material.wireframe?WEBGL_CONSTANTS.LINES:WEBGL_CONSTANTS.TRIANGLES;const o={};var l,c,h,u={},p=[],m=[],d={uv:"TEXCOORD_0",uv2:"TEXCOORD_1",color:"COLOR_0",skinWeight:"WEIGHTS_0",skinIndex:"JOINTS_0"},g=n.getAttribute("normal");void 0===g||this.isNormalizedNormalAttribute(g)||(console.warn("THREE.GLTFExporter: Creating normalized normal attribute from the non-normalized one."),n.setAttribute("normal",this.createNormalizedNormalAttribute(g)));let f=null;for(l in n.attributes)"morph"!==l.slice(0,5)&&(c=n.attributes[l],l=d[l]||l.toUpperCase(),/^(POSITION|NORMAL|TANGENT|TEXCOORD_\d+|COLOR_\d+|JOINTS_\d+|WEIGHTS_\d+)$/.test(l)||(l="_"+l),r.attributes.has(this.getUID(c))?u[l]=r.attributes.get(this.getUID(c)):(f=null,h=c.array,"JOINTS_0"!==l||h instanceof Uint16Array||h instanceof Uint8Array||(console.warn('GLTFExporter: Attribute "skinIndex" converted to type UNSIGNED_SHORT.'),f=new BufferAttribute(new Uint16Array(h),c.itemSize,c.normalized)),null!==(h=this.processAccessor(f||c,n))&&(u[l]=h,r.attributes.set(this.getUID(c),h))));if(void 0!==g&&n.setAttribute("normal",g),0===Object.keys(u).length)return null;if(void 0!==s.morphTargetInfluences&&0<s.morphTargetInfluences.length){var T=[],E=[],S={};if(void 0!==s.morphTargetDictionary)for(const x in s.morphTargetDictionary)S[s.morphTargetDictionary[x]]=x;for(let t=0;t<s.morphTargetInfluences.length;++t){var y={};let e=!1;for(const v in n.morphAttributes)if("position"!==v&&"normal"!==v)e||(console.warn("GLTFExporter: Only POSITION and NORMAL morph are supported."),e=!0);else{var R=n.morphAttributes[v][t],_=v.toUpperCase(),A=n.attributes[v];if(r.attributes.has(this.getUID(R,!0)))y[_]=r.attributes.get(this.getUID(R,!0));else{var b=R.clone();if(!n.morphTargetsRelative)for(let t=0,e=R.count;t<e;t++)for(let e=0;e<R.itemSize;e++)0===e&&b.setX(t,R.getX(t)-A.getX(t)),1===e&&b.setY(t,R.getY(t)-A.getY(t)),2===e&&b.setZ(t,R.getZ(t)-A.getZ(t)),3===e&&b.setW(t,R.getW(t)-A.getW(t));y[_]=this.processAccessor(b,n),r.attributes.set(this.getUID(A,!0),y[_])}}m.push(y),T.push(s.morphTargetInfluences[t]),void 0!==s.morphTargetDictionary&&E.push(S[t])}o.weights=T,0<E.length&&(o.extras={},o.extras.targetNames=E)}g=Array.isArray(s.material);if(g&&0===n.groups.length)return null;var N=g?s.material:[s.material],L=g?n.groups:[{materialIndex:0,start:void 0,count:void 0}];for(let t=0,e=L.length;t<e;t++){var w={mode:i,attributes:u};if(this.serializeUserData(n,w),0<m.length&&(w.targets=m),null!==n.index){let e=this.getUID(n.index);void 0===L[t].start&&void 0===L[t].count||(e+=":"+L[t].start+":"+L[t].count),r.attributes.has(e)?w.indices=r.attributes.get(e):(w.indices=this.processAccessor(n.index,n,L[t].start,L[t].count),r.attributes.set(e,w.indices)),null===w.indices&&delete w.indices}var I=this.processMaterial(N[L[t].materialIndex]);null!==I&&(w.material=I),p.push(w)}o.primitives=p,e.meshes||(e.meshes=[]),this._invokeAll(function(e){e.writeMesh&&e.writeMesh(s,o)});g=e.meshes.push(o)-1;return r.meshes.set(t,g),g}processCamera(e){var t=this.json,s=(t.cameras||(t.cameras=[]),e.isOrthographicCamera),r={type:s?"orthographic":"perspective"};return s?r.orthographic={xmag:2*e.right,ymag:2*e.top,zfar:e.far<=0?.001:e.far,znear:e.near<0?0:e.near}:r.perspective={aspectRatio:e.aspect,yfov:MathUtils.degToRad(e.fov),zfar:e.far<=0?.001:e.far,znear:e.near<0?0:e.near},""!==e.name&&(r.name=e.type),t.cameras.push(r)-1}processAnimation(e,a){var t=this.json,n=this.nodeMap,i=(t.animations||(t.animations=[]),(e=ThreeSceneExporter.Utils.mergeMorphTargetTracks(e.clone(),a)).tracks),o=[],l=[];for(let r=0;r<i.length;++r){var c=i[r],h=PropertyBinding.parseTrackName(c.name);let e=PropertyBinding.findNode(a,h.nodeName);var u=PATH_PROPERTIES[h.propertyName];if(!(e="bones"===h.objectName?!0===e.isSkinnedMesh?e.skeleton.getBoneByName(h.objectIndex):void 0:e)||!u)return console.warn('THREE.GLTFExporter: Could not export animation track "%s".',c.name),null;let t=c.values.length/c.times.length;u===PATH_PROPERTIES.morphTargetInfluences&&(t/=e.morphTargetInfluences.length);let s;!0===c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline?(s="CUBICSPLINE",t/=3):s=c.getInterpolation()===InterpolateDiscrete?"STEP":"LINEAR",l.push({input:this.processAccessor(new BufferAttribute(c.times,1)),output:this.processAccessor(new BufferAttribute(c.values,t)),interpolation:s}),o.push({sampler:l.length-1,target:{node:n.get(e),path:u}})}return t.animations.push({name:e.name||"clip_"+t.animations.length,samplers:l,channels:o}),t.animations.length-1}processSkin(t){var e=this.json,s=this.nodeMap,r=e.nodes[s.get(t)],a=t.skeleton;if(void 0===a)return null;var n=t.skeleton.bones[0];if(void 0===n)return null;var i=[],o=new Float32Array(16*a.bones.length),l=new Matrix4;for(let e=0;e<a.bones.length;++e)i.push(s.get(a.bones[e])),l.copy(a.boneInverses[e]),l.multiply(t.bindMatrix).toArray(o,16*e);return void 0===e.skins&&(e.skins=[]),e.skins.push({inverseBindMatrices:this.processAccessor(new BufferAttribute(o,16)),joints:i,skeleton:s.get(n)}),r.skin=e.skins.length-1}processNode(s){var e,t,r,a=this.json,n=this.options,i=this.nodeMap;a.nodes||(a.nodes=[]);const o={};if(n.trs?(r=s.quaternion.toArray(),e=s.position.toArray(),t=s.scale.toArray(),equalArray(r,[0,0,0,1])||(o.rotation=r),equalArray(e,[0,0,0])||(o.translation=e),equalArray(t,[1,1,1])||(o.scale=t)):(s.matrixAutoUpdate&&s.updateMatrix(),!1===isIdentityMatrix(s.matrix)&&(o.matrix=s.matrix.elements)),""!==s.name&&(o.name=String(s.name)),this.serializeUserData(s,o),s.isMesh||s.isLine||s.isPoints?null!==(r=this.processMesh(s))&&(o.mesh=r):s.isCamera&&(o.camera=this.processCamera(s)),s.isSkinnedMesh&&this.skins.push(s),0<s.children.length){var l=[];for(let e=0,t=s.children.length;e<t;e++){var c=s.children[e];if(c.visible||!1===n.onlyVisible){const h=this.processNode(c);null!==h&&l.push(h)}}0<l.length&&(o.children=l)}this._invokeAll(function(e){e.writeNode&&e.writeNode(s,o)});const h=a.nodes.push(o)-1;return i.set(s,h),h}processScene(s){var e=this.json,r=this.options,t=(e.scenes||(e.scenes=[],e.scene=0),{}),a=(""!==s.name&&(t.name=s.name),e.scenes.push(t),[]);for(let e=0,t=s.children.length;e<t;e++){var n=s.children[e];!n.visible&&!1!==r.onlyVisible||null===(n=this.processNode(n))||a.push(n)}0<a.length&&(t.nodes=a),this.serializeUserData(s,t)}processObjects(t){var s=new Scene;s.name="AuxScene";for(let e=0;e<t.length;e++)s.children.push(t[e]);this.processScene(s)}processInput(t){var s=this.options,r=(t=t instanceof Array?t:[t],this._invokeAll(function(e){e.beforeParse&&e.beforeParse(t)}),[]);for(let e=0;e<t.length;e++)t[e]instanceof Scene?this.processScene(t[e]):r.push(t[e]);0<r.length&&this.processObjects(r);for(let e=0;e<this.skins.length;++e)this.processSkin(this.skins[e]);for(let e=0;e<s.animations.length;++e)this.processAnimation(s.animations[e],t[0]);this._invokeAll(function(e){e.afterParse&&e.afterParse(t)})}_invokeAll(s){for(let e=0,t=this.plugins.length;e<t;e++)s(this.plugins[e])}}class GLTFLightExtension{constructor(e){this.writer=e,this.name="KHR_lights_punctual"}writeNode(e,t){var s,r,a;e.isLight&&(e.isDirectionalLight||e.isPointLight||e.isSpotLight?(s=(a=this.writer).json,a=a.extensionsUsed,r={},e.name&&(r.name=e.name),r.color=e.color.toArray(),r.intensity=e.intensity,e.isDirectionalLight?r.type="directional":e.isPointLight?(r.type="point",0<e.distance&&(r.range=e.distance)):e.isSpotLight&&(r.type="spot",0<e.distance&&(r.range=e.distance),r.spot={},r.spot.innerConeAngle=(e.penumbra-1)*e.angle*-1,r.spot.outerConeAngle=e.angle),void 0!==e.decay&&2!==e.decay&&console.warn("THREE.GLTFExporter: Light decay may be lost. glTF is physically-based, and expects light.decay=2."),!e.target||e.target.parent===e&&0===e.target.position.x&&0===e.target.position.y&&-1===e.target.position.z||console.warn("THREE.GLTFExporter: Light direction may be lost. For best results, make light.target a child of the light with position 0,0,-1."),a[this.name]||(s.extensions=s.extensions||{},s.extensions[this.name]={lights:[]},a[this.name]=!0),(a=s.extensions[this.name].lights).push(r),t.extensions=t.extensions||{},t.extensions[this.name]={light:a.length-1}):console.warn("THREE.GLTFExporter: Only directional, point, and spot lights are supported.",e))}}class GLTFMaterialsUnlitExtension{constructor(e){this.writer=e,this.name="KHR_materials_unlit"}writeMaterial(e,t){e.isMeshBasicMaterial&&(e=this.writer.extensionsUsed,t.extensions=t.extensions||{},t.extensions[this.name]={},e[this.name]=!0,t.pbrMetallicRoughness.metallicFactor=0,t.pbrMetallicRoughness.roughnessFactor=.9)}}class GLTFMaterialsClearcoatExtension{constructor(e){this.writer=e,this.name="KHR_materials_clearcoat"}writeMaterial(e,t){var s,r,a,n;e.isMeshPhysicalMaterial&&(r=(s=this.writer).extensionsUsed,(a={}).clearcoatFactor=e.clearcoat,e.clearcoatMap&&(n={index:s.processTexture(e.clearcoatMap)},s.applyTextureTransform(n,e.clearcoatMap),a.clearcoatTexture=n),a.clearcoatRoughnessFactor=e.clearcoatRoughness,e.clearcoatRoughnessMap&&(n={index:s.processTexture(e.clearcoatRoughnessMap)},s.applyTextureTransform(n,e.clearcoatRoughnessMap),a.clearcoatRoughnessTexture=n),e.clearcoatNormalMap&&(n={index:s.processTexture(e.clearcoatNormalMap)},s.applyTextureTransform(n,e.clearcoatNormalMap),a.clearcoatNormalTexture=n),t.extensions=t.extensions||{},t.extensions[this.name]=a,r[this.name]=!0)}}class GLTFMaterialsIridescenceExtension{constructor(e){this.writer=e,this.name="KHR_materials_iridescence"}writeMaterial(e,t){var s,r,a,n;e.isMeshPhysicalMaterial&&(r=(s=this.writer).extensionsUsed,(a={}).iridescenceFactor=e.iridescence,e.iridescenceMap&&(n={index:s.processTexture(e.iridescenceMap)},s.applyTextureTransform(n,e.iridescenceMap),a.iridescenceTexture=n),a.iridescenceIor=e.iridescenceIOR,a.iridescenceThicknessMinimum=e.iridescenceThicknessRange[0],a.iridescenceThicknessMaximum=e.iridescenceThicknessRange[1],e.iridescenceThicknessMap&&(n={index:s.processTexture(e.iridescenceThicknessMap)},s.applyTextureTransform(n,e.iridescenceThicknessMap),a.iridescenceThicknessTexture=n),t.extensions=t.extensions||{},t.extensions[this.name]=a,r[this.name]=!0)}}class GLTFMaterialsTransmissionExtension{constructor(e){this.writer=e,this.name="KHR_materials_transmission"}writeMaterial(e,t){var s,r,a,n;e.isMeshPhysicalMaterial&&0!==e.transmission&&(r=(s=this.writer).extensionsUsed,(a={}).transmissionFactor=e.transmission,e.transmissionMap&&(n={index:s.processTexture(e.transmissionMap)},s.applyTextureTransform(n,e.transmissionMap),a.transmissionTexture=n),t.extensions=t.extensions||{},t.extensions[this.name]=a,r[this.name]=!0)}}class GLTFMaterialsVolumeExtension{constructor(e){this.writer=e,this.name="KHR_materials_volume"}writeMaterial(e,t){var s,r,a,n;e.isMeshPhysicalMaterial&&0!==e.transmission&&(r=(s=this.writer).extensionsUsed,(a={}).thicknessFactor=e.thickness,e.thicknessMap&&(n={index:s.processTexture(e.thicknessMap)},s.applyTextureTransform(n,e.thicknessMap),a.thicknessTexture=n),a.attenuationDistance=e.attenuationDistance,a.attenuationColor=e.attenuationColor.toArray(),t.extensions=t.extensions||{},t.extensions[this.name]=a,r[this.name]=!0)}}ThreeSceneExporter.Utils={insertKeyframe:function(t,s){var r=t.getValueSize(),a=new t.TimeBufferType(t.times.length+1),n=new t.ValueBufferType(t.values.length+r),i=t.createInterpolant(new t.ValueBufferType(r));let o;if(0===t.times.length){a[0]=s;for(let e=0;e<r;e++)n[e]=0;o=0}else if(s<t.times[0]){if(Math.abs(t.times[0]-s)<.001)return 0;a[0]=s,a.set(t.times,1),n.set(i.evaluate(s),0),n.set(t.values,r),o=0}else if(s>t.times[t.times.length-1]){if(Math.abs(t.times[t.times.length-1]-s)<.001)return t.times.length-1;a[a.length-1]=s,a.set(t.times,0),n.set(t.values,0),n.set(i.evaluate(s),t.values.length),o=a.length-1}else for(let e=0;e<t.times.length;e++){if(Math.abs(t.times[e]-s)<.001)return e;if(t.times[e]<s&&t.times[e+1]>s){a.set(t.times.slice(0,e+1),0),a[e+1]=s,a.set(t.times.slice(e+1),e+2),n.set(t.values.slice(0,(e+1)*r),0),n.set(i.evaluate(s),(e+1)*r),n.set(t.values.slice((e+1)*r),(e+2)*r),o=e+1;break}}return t.times=a,t.values=n,o},mergeMorphTargetTracks:function(e,t){var r=[],a={},n=e.tracks;for(let e=0;e<n.length;++e){let s=n[e];var i=PropertyBinding.parseTrackName(s.name),o=PropertyBinding.findNode(t,i.nodeName);if("morphTargetInfluences"!==i.propertyName||void 0===i.propertyIndex)r.push(s);else{if(s.createInterpolant!==s.InterpolantFactoryMethodDiscrete&&s.createInterpolant!==s.InterpolantFactoryMethodLinear){if(s.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline)throw new Error("THREE.GLTFExporter: Cannot merge tracks with glTF CUBICSPLINE interpolation.");console.warn("THREE.GLTFExporter: Morph target interpolation mode not yet supported. Using LINEAR instead."),(s=s.clone()).setInterpolation(InterpolateLinear)}var l=o.morphTargetInfluences.length,c=o.morphTargetDictionary[i.propertyIndex];if(void 0===c)throw new Error("THREE.GLTFExporter: Morph target name not found: "+i.propertyIndex);let t;if(void 0===a[o.uuid]){var h=new(t=s.clone()).ValueBufferType(l*t.times.length);for(let e=0;e<t.times.length;e++)h[e*l+c]=t.values[e];t.name=(i.nodeName||"")+".morphTargetInfluences",t.values=h,a[o.uuid]=t,r.push(t)}else{var u=s.createInterpolant(new s.ValueBufferType(1));t=a[o.uuid];for(let e=0;e<t.times.length;e++)t.values[e*l+c]=u.evaluate(t.times[e]);for(let e=0;e<s.times.length;e++){var p=this.insertKeyframe(t,s.times[e]);t.values[p*l+c]=s.values[e]}}}}return e.tracks=r,e}};import*as THREE from"three";class AreaLight{constructor(e,t,s,r={}){this.name="REAL_AREA_LIGHT";t=new THREE.PlaneGeometry(t,s),t.rotateX(Math.PI/2),s=r.color,s=s?`hsl(${s.h}, ${s.s}%, ${s.v}%)`:16777215,s=new THREE.MeshBasicMaterial({color:s,side:THREE.FrontSide});this.mesh=new THREE.Mesh(t,s),this.mesh.name=this.name,this.scale=new RealSpot(this.mesh,"SCA"),this.position=new RealSpot(this.mesh,"POS"),this.rotation=new RealSpot(this.mesh,"ROT"),this.properties=this._getConfig(r),this.mesh.castShadow=!1,this.mesh.receiveShadow=!1,(this.mesh.userData.myClass=this).mesh.userData.type=this.name,e.add(this.mesh)}_getConfig(e){return{type:"REAL_AREA_LIGHT",portal:!!(e=e||{}).hasOwnProperty("portal")&&e.portal,intensity:e.hasOwnProperty("intensity")?e.intensity:10,beamAngle:e.hasOwnProperty("beamAngle")?e.beamAngle:180,color:e.hasOwnProperty("color")?e.color:{h:0,s:0,v:1},castShadow:!e.hasOwnProperty("castShadow")||e.castShadow,shadowCaustics:!!e.hasOwnProperty("shadowCaustics")&&e.shadowCaustics,multipleImportance:!e.hasOwnProperty("multipleImportance")||e.multipleImportance}}getMesh(){var e=this.mesh;return e.name=this.realInfo(),e}realInfo(){return JSON.stringify(this.properties)}bindKeys(t){let s="!";for(const r in t){let e=t[r];"object"==typeof e&&(e=this.bindKeys(e)),s+=`|${r}_`+e}return s+="!"}visible(e=!0){this.mesh.material.visible=e}add(e){this.mesh.add(e)}remove(e){e.parent===this.mesh&&this.mesh.remove(e)}}class RealTransform{constructor(e){this.position=new RealSpot(e,"POS"),this.rotation=new RealSpot(e,"ROT")}}class RealSpot{constructor(e,t){this.type=t,this.mesh=e}set(e,t,s,r=void 0){switch(this.type){case"ROT":this.mesh.rotation.set(e,t,s,r);break;case"POS":this.mesh.position.set(e,t,s);break;case"SCA":this.mesh.scale.set(e,t,s)}}copy(e){switch(this.type){case"ROT":this.mesh.rotation.copy(e);break;case"POS":this.mesh.position.copy(e);break;case"SCA":this.mesh.scale.copy(e)}}}const ConvertStatus={FAILED:0,SUCCESS:1,ALREADY:2,PENDING:3,NOT_LOGGED:4,ERROR:5};async function UploadScene(e,t){var s=await ExportRestAPI(t,e.jobInfo.scene);return s&&await e.askService(Status.Upload,t),s}async function RenderScene(e,t,s){return e.isLoggedIn?e.waiting?ConvertStatus.ALREADY:e.isPending()?ConvertStatus.PENDING:ParseScene(e,t,s):ConvertStatus.NOT_LOGGED}async function ParseScene(t,s,r){if(!t||!s||!r)return ConvertStatus.ERROR;t.waiting=!0;const a=r.name,n=r.parent;n!==s&&(s.add(r),r.name="REAL_EYE");const i=[];s.traverse(e=>{var t;"REAL_AREA_LIGHT"===e.userData.type&&(t=e.userData.myClass)&&(i.push({mesh:e,class:t}),e.userData.myClass=void 0,e.name=t.realInfo())});return(new ThreeSceneExporter).parse(s,async e=>{resetScene(i,n,a,s,r),await exportDone(t,e)},e=>{resetScene(i,n,a,s,r),exportError(e,t)},{binary:!0}),ConvertStatus.SUCCESS}async function exportDone(e,t){var s=FileSize(t.byteLength);ConsoleSize(t.byteLength),150<s||(e.jobInfo.scene=GetBin(t),await e.askService(Status.NewJob,e,null,!0))}function resetScene(s,e,t,r,a){e?e.add(a):r.remove(a),a.name=t,r.traverse(t=>{if("REAL_AREA_LIGHT"===t.userData.type)for(let e=0;e<s.length;e++)if(s[e].child===t){t.userData.myClass=s[e].class,s.splice(e,1);break}})}function exportError(e,t){t.clearAll(),console.log("An error happened"),console.error(e)}function GetModel(e,t){(new ThreeSceneExporter).parse(e,e=>{t&&t(e)},e=>{t&&t(void 0,e)},{binary:!0})}async function ToRealScene(t,s,r){const a=s.name,n=s.parent;n!==t&&(t.add(s),s.name="REAL_EYE");const i=[];t.traverse(e=>{var t;"REAL_AREA_LIGHT"===e.userData.type&&(t=e.userData.myClass)&&(i.push({mesh:e,class:t}),e.userData.myClass=void 0,e.name=t.realInfo())});(new ThreeSceneExporter).parse(t,e=>{resetScene(i,n,a,t,s),r&&r(e)},e=>{resetScene(i,n,a,t,s),r&&r(void 0,e)},{binary:!0})}function JobID(e){return e&&(e.includes("/rapi/")||e.includes(".r3d"))?e.split("/rapi/")[1].split(".r3d")[0]:""}const LoginStatus={JOB:0,USER:1,SUCCESS:2,ALREADY:3};async function LoginRealAPI(e,t,s){return e.isLoggedIn?LoginStatus.ALREADY:e.connecting?LoginStatus.JOB:e.__socket&&e.__socket.waiting?LoginStatus.USER:(await e.login(t,s),LoginStatus.SUCCESS)}import axios from"axios";async function ExportRestAPI(e,t){try{return 200===(await axios.put(e,t)).status}catch(e){return console.error(e),!1}}function GetBin(e){return new Blob([e],{type:"application/octet-stream"})}async function Blob2Uint(e){return new Response(e).arrayBuffer().then(e=>[...new Uint8Array(e)])}function save(e,t){var s=document.createElement("a");s.href=window.URL.createObjectURL(e),s.download=t,s.click()}function FileSize(e,t=!1){return(e/(t?1024:1048576)).toFixed(2)}function ConsoleSize(e){e=(e/1024).toFixed(2),e=e.toString().length<4?e+" KB":(e/1024).toFixed(3)+" MB";console.log("File size = "+e)}function ConsoleSceneSize(e){ConsoleSize(e.byteLength)}async function RealUpdater(e,t){var s=UserResponse(t),r=e.realAPI,a=(s.msg,s.data);switch(s.type){case Status.None:return;case Status.Login:var n=a;n.scene=null,n.jobUri=null,r.jobInfo=n,e.connectionEstablished(),s.type=Status.Login,s.msg="SUCCESS";break;case Status.Upload:break;case Status.Echo:console.log("ECHO");break;case Status.NewJob:a?await UploadScene(r,a)?(n=JobID(a),s.msg="SUCCESS",s.data={jobID:n,status:"WAITING"}):(s.msg="FAILED",s.data=null):s.msg="FAILED",r.clearAll()}await e.invoke(s)}function UserResponse(e){var t=CheckType(e),s=new RealResponse;switch(t){case ResponseType.Code:var r=parseInt(e);return s.type=RealDecoder(r),s.msg=r,s;case ResponseType.Binary:return s.type=Status.Download,s.msg="SUCCESS",s.data=GetBin(e),s;default:r=JSON.parse(e);return s.msg=r.msg,s.type=ToStatus(r.type),s.data=r.data,s}}function ToStatus(e){return CheckResponseType(e)!==ResponseType.Code?RealDeType(e):RealDecoder(parseInt(e))}const Status={None:0,Echo:1,Jobs:2,Login:3,Logout:4,NewJob:5,Upload:6,Result:7,Export:8,Occupied:9,Download:10,JobFailed:11,NoRenderer:12,LoginIssue:13,DataFailed:14,LoginFailed:15,SceneFailed:16,JobStatus:17};function EnumString(e,t=0){for(var s in Status)if(Status[s]===e)return 0===t?s.toLowerCase():1===t?s.toUpperCase():s;return""}const ResponseType={Code:0,Binary:1,Json:2};function RealDeType(e){switch(e){case"echo":return Status.Echo;case"jobs":return Status.Jobs;case"result":return Status.Result;case"newjob":return Status.NewJob;case"upload":return Status.Upload;case"logged_in":return Status.Login;case"login_error":return Status.LoginIssue;case"login_failed":return Status.LoginFailed;default:return Status.None}}function RealDecoder(e){switch(e){case 0:return Status.LoginIssue;case 1:return Status.LoginFailed;case 2:return Status.Login;case 3:return Status.DataFailed;case 4:return Status.Echo;case 5:return Status.NoRenderer;case 6:return Status.Occupied;default:return Status.None}}function CheckType(e){return isNaN(e)?e.toString().startsWith("{")?ResponseType.Json:ResponseType.Binary:ResponseType.Code}function CheckResponseType(e){return isNaN(e)?ResponseType.Json:ResponseType.Code}class RealNetwork{protocol="wss";host="app.real-api.com:8001";constructor(e){e&&(this.protocol="ws",this.host="localhost:8001")}wURI(e){var t=e.appKey,s=e.product,r=e.userName,e=e.appSecret;return`${this.protocol}://${this.host}/`+`login?${`user_name=${r}&app_key=${t}&app_secret=`+e}&`+(`prod_name=${s.prodName}&prod_key=${s.prodKey}&ins_id=`+s.insID)}getCred(e){var t=e.appKey,s=e.userName,r=e.appSecret,e=e.product;return{insID:e.insID,appKey:t,prodKey:e.prodKey,prodName:e.prodName,userName:s,appSecret:r}}}class RealResponse{constructor(e=Status.None,t="",s=null){this.msg=t,this.data=s,this.type=e}}class RealSocket{constructor(e,t,s){var r=!!s.__pars&&s.__pars.test;this.realAPI=s,this.__network=new RealNetwork(r),this.__url=this.__network.wURI(s),this.__error=t,this.__callback=e,this.socket=null,this.instance=null,this.waiting=!1,this.connected=!1}async connect(){this.connected||this.waiting||(this.socket=new WebSocket(this.__url),this.init())}init(){this.socket.onopen=this.open.bind(this),this.socket.onerror=this.error.bind(this),this.socket.onclose=this.closed.bind(this),this.socket.onmessage=this.receive.bind(this)}async receive(e){await RealUpdater(this,e.data)}async invoke(e){await this.__callback&&this.__callback(e)}connectionEstablished(){this.waiting=!1,this.connected=!0,this.realAPI.connecting=!1,this.realAPI.isLoggedIn=!0}waitForConnection(){setTimeout(async()=>{await this.ask(Status.Echo),this.instance=requestAnimationFrame(this.waitForConnection.bind(this))},5)}async requestService(e){this.__network.getCred(this);return{type:EnumString(e),msg:"FAILED",data:void 0}}async ask(e,t=null,s=null,r=!1){t&&r&&(t=this.__network.getCred(t));r={type:EnumString(e),data:t,msg:s},e=JSON.stringify(r);this.socket.send(e)}open(e){this.waiting=!0,this.connected=!1,this.realAPI.isLoggedIn=!1}error(e){this.__error&&this.__error()}closed(){this.waiting=!1,this.connected=!1,this.realAPI.isLoggedIn=!1}close(){this.socket.close(),this.closed()}}export{RealAPI,JobResult,RealProduct,WEBGL_CONSTANTS,THREE_TO_WEBGL,PATH_PROPERTIES,GLB_HEADER_BYTES,GLB_HEADER_MAGIC,GLB_VERSION,GLB_CHUNK_PREFIX_BYTES,GLB_CHUNK_TYPE_JSON,GLB_CHUNK_TYPE_BIN,ThreeSceneExporter,AreaLight,RealTransform,RealSpot,ConvertStatus,UploadScene,RenderScene,ToRealScene,JobID,LoginStatus,LoginRealAPI,ExportRestAPI,GetBin,Blob2Uint,save,FileSize,ConsoleSize,ConsoleSceneSize,RealUpdater,Status,EnumString,ResponseType,RealDeType,RealDecoder,CheckType,CheckResponseType,RealNetwork,RealResponse,RealSocket};